@import url("https://fonts.googleapis.com/css?family=Poppins:200,300,400,500,600,700,800,900&display=swap");
@import url("https://use.fontawesome.com/releases/v6.5.1/css/all.css");

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: #25252b;
}

* {
  font-family: "Poppins", sans-serif;
}

@property --a {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}

.box {
  position: relative;
  width: 400px;
  height: 200px;
  background: repeating-conic-gradient(
    from var(--a),
    #fff 0%,
    #45f3ff 5%,
    transparent 5%,
    transparent 40%,
    #fff 50%
  );
  filter: drop-shadow(9 10px 150px #faf7f7);
  border-radius: 20px;
  animation: rotating 4s linear infinite;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: 0.5s;
}

@keyframes rotating {
  0% {
    --a: 0deg;
  }

  0% {
    --a: 360deg;
  }
}

.box::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background: repeating-conic-gradient(
    from var(--a),
    #45f3ff 0%,
    #45f3ff 5%,
    transparent 5%,
    transparent 40%,
    #45f3ff 50%
  );
  filter: drop-shadow(0 15px 15px #ece4e4);
  border-radius: 20px;
  animation: rotating 4s linear infinite;
  animation-delay: -1s;
}

.box::after {
  content: "";
  position: absolute;
  inset: 4px;
  background: #2d2d39;
  border-radius: 15px;
  border: 8px solid #25252b;
}

.box:hover {
  width: 450px;
  height: 600px;
  padding-block: 60px;
}

.box:hover .login {
  inset: 40px;
}

.box:hover .loginBx {
  transform: translateY(0px);
}

.login {
  position: absolute;
  inset: 60px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  border-radius: 10px;
  background: #00000033;
  color: #fff;
  z-index: 1000;
  box-shadow: inset 0 10px 20px #00000080;
  border-bottom: 2px solid #ffffff80;
  transition: 0.5s;
  overflow: hidden;
}

.loginBx {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 20px;
  width: 70%;
  transform: translateY(135px);
  transition: 0.5s;
}

h2 {
  text-transform: uppercase;
  font-weight: 600;
  letter-spacing: 0.2em;
}

h2 i {
  color: #45f3ff;
  text-shadow: 0 0 5px #45f3ff, 0 0 20px #45f3ff;
}

input {
  width: 100%;
  padding: 10px 20px;
  outline: none;
  border: none;
  font-size: 1em;
  color: #fff;
  background: #0000001a;
  border: 2px solid #fff;
  border-radius: 30px;
}

input::placeholder {
  color: #999;
}

input[type="submit"] {
  background: #45f3ff;
  border: none;
  font-weight: 500;
  color: #111;
  cursor: pointer;
  transition: 0.5s;
}

input[type="submit"]:hover {
  box-shadow: 0 0 10px #45f3ff, 0 0 60px #45f3ff;
}

.group {
  width: 100%;
  display: flex;
  justify-content: space-between;
}

.group a {
  color: #fff;
  text-decoration: none;
}

.group a:nth-child(2) {
  color: #45f3ff;
  font-weight: 600;
}
.group a:hover {
  text-decoration: underline;
}
.group a:nth-child(2):hover {
  color: #45f3ff;
  text-shadow: 0 0 5px #45f3ff, 0 0 20px #45f3ff;
}

.loginBx h2 {
  white-space: nowrap;        /* Không xuống dòng       /* Ẩn phần dư */
}
.register {
  transform: translateY(235px);
  transition: 0.5s;
}

.loginBx h2 i {
  text-shadow: 0 0 5px #45f3ff;
  animation: text 1.2s linear infinite;
}
@keyframes text {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-6px);
  }
  100% {
    transform: translateY(0);
  }
}
.loginBx {
  transition: opacity 0.4s ease, transform 0.4s ease;
  opacity: 0;
 
  pointer-events: none;
  position: absolute;
}

.active {
  opacity: 1;
  
  pointer-events: auto;
  position: relative;
}
.notification {
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  min-width: 300px;
  max-width: 80%;
  background: linear-gradient(135deg, #fff, #45f3ff);
  color: #070000;
  padding: 16px 24px;
  border-radius: 16px;
  font-weight: 500;
  font-size: 16px;
  text-align: center;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  opacity: 0;
  pointer-events: none;
  transition: all 0.4s ease;
  z-index: 9999;
}

.notification.show {
  opacity: 1;
  pointer-events: auto;
  animation: fadeSlideDown 0.4s ease forwards;
}

@keyframes fadeSlideDown {
  from {
    transform: translate(-50%, -20px);
    opacity: 0;
  }
  to {
    transform: translate(-50%, 0);
    opacity: 1;
  }
}